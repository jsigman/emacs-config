* Global Keybindings
#+PROPERTY: header-args:elisp :load yes

#+BEGIN_SRC elisp :load yes
;-------------CUSTOM KEYBINDINGS-----------;
(global-set-key (kbd "M-k") 'kill-this-buffer)
;Window management
;Switch window with M-k

(global-set-key (kbd "C-c C-b") 'compile)
(global-set-key (kbd "M-0") 'delete-window)
(global-set-key (kbd "M-1") 'delete-other-windows)
(global-set-key (kbd "M-2") 'split-window-below)
(global-set-key (kbd "M-3") 'split-window-right)

; Unbind reverse search because we'll use swiper
(global-unset-key (kbd "C-r"))

(straight-use-package 'expand-region)
(require 'expand-region)
(global-set-key (kbd "M-J") 'er/expand-region)

(straight-use-package 'which-key)
(require 'which-key)
(which-key-mode 1)

;; (straight-use-package 'corral)
;; (require 'corral)
;; (global-set-key (kbd "M-(")
;;                 'corral-parentheses-backward)
;; (global-set-key (kbd "M-)")
;;                 'corral-parentheses-forward)
;; (global-set-key (kbd "M-[")
;;                 'corral-brackets-backward)
;; (global-set-key (kbd "M-]")
;;                 'corral-brackets-forward)
;; (global-set-key (kbd "M-{")
;;                 'corral-braces-backward)
;; (global-set-key (kbd "M-}")
;;                 'corral-braces-forward)
;; (global-set-key (kbd "M-\"")
;;                 'corral-double-quotes-backward)

(straight-use-package 'ibuffer)
(require 'ibuffer)
(global-set-key (kbd "C-x C-b") 'ibuffer)
(define-key ibuffer-mode-map (kbd "M-o") nil)

;; (straight-use-package 'frog-jump-buffer)
;; (global-set-key (kbd "C-x b") 'frog-jump-buffer)

(global-set-key (kbd "M-u") 'upcase-dwim)
(global-set-key (kbd "M-l") 'downcase-dwim)

(global-set-key (kbd "C-.") 'xref-find-definitions-other-window)


(provide 'global-keybindings)
#+END_SRC
