* Tree-Sitter
** Tree-Sitter mode
This is the old way of using ~tree-sitter~ in emacs. In emacs 29, this moved to treesit.
#+begin_src emacs-lisp :load no
(use-package
 tree-sitter
 :config (global-tree-sitter-mode t)
 :hook ((tree-sitter-after-on-hook . tree-sitter-hl-mode)))

(use-package tree-sitter-langs)

#+END_SRC
** Combobulate
#+begin_src emacs-lisp
(use-package
 combobulate
 :straight '(combobulate :type git :host github :repo "mickeynp/combobulate")
 ;; You can manually enable Combobulate with `M-x
 ;; combobulate-mode'.
 :hook
 ((python-ts-mode . combobulate-mode)
  (js-ts-mode . combobulate-mode)
  (css-ts-mode . combobulate-mode)
  (yaml-ts-mode . combobulate-mode)
  (typescript-ts-mode . combobulate-mode)
  (tsx-ts-mode . combobulate-mode))
 ;; Amend this to the directory where you keep Combobulate's source
 ;; code.
 :bind
 (:map
  combobulate-key-map (("C-;" . combobulate-avy-jump) ("M-k" . nil))))
#+end_src
** Treesit
#+begin_src emacs-lisp :load yes
(use-package
 treesit-auto
 :straight '(treesit-auto :type git :host github :repo "renzmann/treesit-auto")
 :demand t
 :config
 (setq treesit-auto-install 'prompt)
 (global-treesit-auto-mode)

 ;; Set up treesit mode hooks for relevant modes
 (setq python-ts-mode-hook python-mode-hook)
 (setq yaml-ts-mode-hook yaml-mode-hook)
 (setq json-ts-mode-hook json-mode-hook)
 (setq js-ts-mode-hook js-mode-hook)
 (setq markdown-ts-mode-hook markdown-mode-hook)
 (setq bash-ts-mode-hook sh-mode-hook))
#+END_SRC
